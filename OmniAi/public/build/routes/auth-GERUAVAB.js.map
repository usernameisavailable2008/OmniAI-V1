{
  "version": 3,
  "sources": ["../../../app/routes/auth.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\auth.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\auth.tsx\");\n  import.meta.hot.lastModified = \"1751566533632.081\";\n}\n// REMIX HMR END\n\nimport { redirect } from \"@remix-run/node\";\nimport { AuthService } from \"~/services/auth.server\";\nimport { Logger } from \"~/utils/logger.server\";\nconst logger = new Logger('auth-route');\nexport const loader = async ({\n  request\n}) => {\n  const authService = AuthService.getInstance();\n  try {\n    const url = new URL(request.url);\n    const shop = url.searchParams.get('shop');\n    if (!shop) {\n      logger.error('No shop parameter provided in auth request');\n      return redirect('/?error=missing_shop');\n    }\n\n    // Validate shop domain format\n    if (!shop.includes('.myshopify.com') && !shop.includes('.shopify.com')) {\n      logger.error('Invalid shop domain format', {\n        shop\n      });\n      return redirect('/?error=invalid_shop');\n    }\n    logger.info('Initiating OAuth flow', {\n      shop\n    });\n\n    // Generate OAuth URL and redirect to Shopify\n    const authResult = await authService.handleAuthRedirect(request);\n    return redirect(authResult.redirectUrl, {\n      headers: authResult.headers\n    });\n  } catch (error) {\n    logger.error('Auth initiation failed', error);\n    return redirect('/?error=auth_failed');\n  }\n};\n\n// This route only handles redirects, no component needed\nexport default function Auth() {\n  return null;\n}\n_c = Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAoBA,kBAAyB;AACzB,kBAA4B;AAC5B,oBAAuB;AArBvB,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,gCAAkC,EAAE;AAAA,EAC7E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAuB;AACvB,cAAY,IAAI,eAAe;AACjC;AAMA,IAAM,SAAS,IAAI,qBAAO,YAAY;AAoCvB,SAAR,OAAwB;AAC7B,SAAO;AACT;AACA,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,MAAM;AAEvB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
