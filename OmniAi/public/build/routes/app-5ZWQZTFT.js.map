{
  "version": 3,
  "sources": ["../../../app/routes/app.tsx", "../../../app/components/Chatbot.tsx", "../../../app/hooks/useUser.ts"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\app.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\app.tsx\");\n  import.meta.hot.lastModified = \"1751565971626.0706\";\n}\n// REMIX HMR END\n\nimport { json, redirect } from '@remix-run/node';\nimport { useLoaderData } from '@remix-run/react';\nimport { AuthService } from '~/services/auth.server';\nimport { BillingService } from '~/services/billing.server';\nimport Chatbot from '~/components/Chatbot';\nexport const loader = async ({\n  request\n}) => {\n  const authService = AuthService.getInstance();\n  const billingService = BillingService.getInstance();\n  const auth = await authService.authenticate(request);\n  if (!auth.isAuthenticated) {\n    const url = new URL(request.url);\n    const shop = url.searchParams.get('shop');\n    if (!shop) {\n      return redirect('/auth/login');\n    }\n    return redirect(`/auth/login?shop=${shop}`);\n  }\n\n  // Check subscription status using billing service\n  const subscription = await billingService.getUserSubscription(request);\n  if (!subscription || subscription.status !== 'active') {\n    // Redirect to landing page for subscription selection\n    return redirect('/');\n  }\n\n  // Get initial command from URL if provided\n  const url = new URL(request.url);\n  const initialCommand = url.searchParams.get('command');\n  return json({\n    isAuthenticated: true,\n    shop: auth.shop,\n    tier: subscription.planId,\n    subscription: subscription,\n    needsSubscription: false,\n    initialCommand\n  });\n};\nexport default function App() {\n  _s();\n  const {\n    isAuthenticated,\n    shop,\n    tier,\n    subscription,\n    needsSubscription,\n    initialCommand\n  } = useLoaderData();\n  if (!isAuthenticated) {\n    return null; // Will be redirected by the loader\n  }\n  if (needsSubscription) {\n    return <div style={{\n      padding: '2rem',\n      textAlign: 'center'\n    }}>\r\n        <h2>Subscription Required</h2>\r\n        <p>Please subscribe to continue using OmniAI.</p>\r\n        <a href={`/subscribe?shop=${shop}`} style={{\n        display: 'inline-block',\n        padding: '0.75rem 1.5rem',\n        background: 'linear-gradient(135deg, #d77cf0, #7aa2ff)',\n        color: 'white',\n        textDecoration: 'none',\n        borderRadius: '0.5rem',\n        fontWeight: '600',\n        marginTop: '1rem'\n      }}>\r\n          Subscribe Now\r\n        </a>\r\n      </div>;\n  }\n  return <Chatbot initialCommand={initialCommand} />;\n}\n_s(App, \"M2rALECJrpv/ZJJE/zXZolk/NT8=\", false, function () {\n  return [useLoaderData];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\Chatbot.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\Chatbot.tsx\");\n  import.meta.hot.lastModified = \"1751563507870.9866\";\n}\n// REMIX HMR END\n\nimport { useState, useRef, useEffect } from 'react';\nimport { useFetcher } from '@remix-run/react';\nimport { useUser } from '~/hooks/useUser';\nexport default function Chatbot({\n  initialCommand\n}) {\n  _s();\n  const user = useUser();\n  const fetcher = useFetcher();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(initialCommand || '');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const inputRef = useRef(null);\n  const promptSuggestions = ['Make my titles more professional?', \"What's this month's revenue?\", 'Update my inventory levels', 'Optimize my product descriptions'];\n  const handleSubmit = async commandText => {\n    const command = commandText || input.trim();\n    if (!command || isProcessing) return;\n    const userMessage = {\n      id: Date.now().toString(),\n      type: 'user',\n      content: command,\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n    setIsProcessing(true);\n\n    // Submit to API\n    const formData = new FormData();\n    formData.append('command', command);\n    formData.append('tier', user.tier.toString());\n    formData.append('shop', user.shopId || '');\n    fetcher.submit(formData, {\n      method: 'POST',\n      action: '/api/chat'\n    });\n  };\n  const handlePromptClick = prompt => {\n    handleSubmit(prompt);\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSubmit();\n    }\n  };\n\n  // Handle fetcher response\n  useEffect(() => {\n    if (fetcher.data && fetcher.state === 'idle') {\n      setIsProcessing(false);\n      if (fetcher.data.success) {\n        const assistantMessage = {\n          id: (Date.now() + 1).toString(),\n          type: 'assistant',\n          content: fetcher.data.result?.message || 'Command executed successfully',\n          timestamp: new Date()\n        };\n        setMessages(prev => [...prev, assistantMessage]);\n      } else {\n        const errorMessage = {\n          id: (Date.now() + 1).toString(),\n          type: 'assistant',\n          content: fetcher.data.error || 'Command failed',\n          timestamp: new Date()\n        };\n        setMessages(prev => [...prev, errorMessage]);\n      }\n    }\n  }, [fetcher.data, fetcher.state]);\n\n  // Auto-execute initial command if provided\n  useEffect(() => {\n    if (initialCommand && initialCommand.trim() && messages.length === 0) {\n      // Small delay to ensure component is fully mounted\n      setTimeout(() => {\n        handleSubmit(initialCommand);\n      }, 500);\n    }\n  }, [initialCommand]);\n  return <div className=\"omniai-chat\">\r\n      <style>{`\n        .omniai-chat {\n          display: flex;\n          height: 100vh;\n          font-family: 'Poppins', sans-serif;\n        }\n        \n        .chat-sidebar {\n          width: 60px;\n          background: #f9f9f9;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          padding: 1rem 0;\n          border-right: 1px solid #eee;\n        }\n        \n        .chat-logo {\n          margin-bottom: 1rem;\n          width: 40px;\n          height: 40px;\n          background: linear-gradient(135deg, #d77cf0, #7aa2ff);\n          border-radius: 8px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          color: white;\n          font-weight: 600;\n          font-size: 1.2rem;\n        }\n        \n        .chat-main {\n          flex: 1;\n          display: flex;\n          flex-direction: column;\n          background: linear-gradient(135deg, #fcd8ff, #d0e5ff);\n          min-height: 100vh;\n        }\n        \n        .chat-messages {\n          flex: 1;\n          overflow-y: auto;\n          padding: 1rem;\n          max-height: calc(100vh - 200px);\n        }\n        \n        .chat-message {\n          margin-bottom: 1rem;\n          display: flex;\n          align-items: flex-start;\n          gap: 0.75rem;\n        }\n        \n        .chat-message.user {\n          justify-content: flex-end;\n        }\n        \n        .chat-message.assistant {\n          justify-content: flex-start;\n        }\n        \n        .message-content {\n          max-width: 70%;\n          padding: 0.75rem 1rem;\n          border-radius: 1rem;\n          line-height: 1.5;\n        }\n        \n        .chat-message.user .message-content {\n          background: linear-gradient(135deg, #d77cf0, #7aa2ff);\n          color: white;\n          border-bottom-right-radius: 0.25rem;\n        }\n        \n        .chat-message.assistant .message-content {\n          background: white;\n          color: #333;\n          border-bottom-left-radius: 0.25rem;\n          box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n        }\n        \n        .chat-welcome {\n          flex: 1;\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n          align-items: center;\n          padding: 2rem;\n          text-align: center;\n        }\n        \n        .hero-text {\n          font-size: 2rem;\n          font-weight: 600;\n          margin-bottom: 0.5rem;\n          color: #222;\n        }\n        \n        .hero-subtext {\n          font-size: 1rem;\n          color: #555;\n          margin-bottom: 1.5rem;\n          line-height: 1.6;\n        }\n        \n        .prompt-buttons {\n          display: flex;\n          gap: 1rem;\n          margin-bottom: 2rem;\n          flex-wrap: wrap;\n          justify-content: center;\n        }\n        \n        .prompt-buttons button {\n          padding: 0.75rem 1.25rem;\n          border-radius: 999px;\n          border: none;\n          background: #fff;\n          box-shadow: 0 0 0 1px #ddd;\n          cursor: pointer;\n          font-weight: 500;\n          transition: all 0.2s ease-in-out;\n          font-family: 'Poppins', sans-serif;\n        }\n        \n        .prompt-buttons button:hover {\n          background: #f0f0f0;\n          transform: translateY(-2px);\n          box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n        }\n        \n        .chat-input-container {\n          padding: 1rem;\n          background: transparent;\n        }\n        \n        .chat-input-wrapper {\n          display: flex;\n          align-items: center;\n          background: #fff;\n          border-radius: 999px;\n          padding: 0.75rem 1rem;\n          width: 100%;\n          max-width: 700px;\n          margin: 0 auto;\n          box-shadow: 0 0 0 2px #d77cf0;\n          position: relative;\n        }\n        \n        .chat-input-wrapper input {\n          flex: 1;\n          border: none;\n          outline: none;\n          font-size: 1rem;\n          font-family: 'Poppins', sans-serif;\n          background: transparent;\n        }\n        \n        .chat-input-wrapper input::placeholder {\n          color: #999;\n        }\n        \n        .chat-input-wrapper button {\n          background: linear-gradient(135deg, #d77cf0, #7aa2ff);\n          border: none;\n          padding: 0.5rem 1rem;\n          color: white;\n          border-radius: 999px;\n          cursor: pointer;\n          font-weight: 600;\n          margin-left: 0.5rem;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          transition: background 0.2s;\n          min-width: 40px;\n          height: 40px;\n        }\n        \n        .chat-input-wrapper button:hover:not(:disabled) {\n          background: linear-gradient(135deg, #c357e6, #6499ff);\n        }\n        \n        .chat-input-wrapper button:disabled {\n          opacity: 0.6;\n          cursor: not-allowed;\n        }\n        \n        .char-count {\n          font-size: 0.8rem;\n          color: #999;\n          margin-left: 0.5rem;\n          position: absolute;\n          right: 60px;\n          top: 50%;\n          transform: translateY(-50%);\n        }\n        \n        .processing-indicator {\n          display: flex;\n          align-items: center;\n          gap: 0.5rem;\n          padding: 0.75rem 1rem;\n          background: white;\n          border-radius: 1rem;\n          margin-bottom: 1rem;\n          box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n          max-width: 200px;\n        }\n        \n        .processing-dots {\n          display: flex;\n          gap: 0.25rem;\n        }\n        \n        .processing-dot {\n          width: 8px;\n          height: 8px;\n          border-radius: 50%;\n          background: #d77cf0;\n          animation: pulse 1.5s infinite;\n        }\n        \n        .processing-dot:nth-child(2) {\n          animation-delay: 0.3s;\n        }\n        \n        .processing-dot:nth-child(3) {\n          animation-delay: 0.6s;\n        }\n        \n        @keyframes pulse {\n          0%, 60%, 100% {\n            opacity: 0.3;\n          }\n          30% {\n            opacity: 1;\n          }\n        }\n        \n        @media (max-width: 768px) {\n          .chat-sidebar {\n            width: 50px;\n          }\n          \n          .hero-text {\n            font-size: 1.5rem;\n          }\n          \n          .prompt-buttons {\n            flex-direction: column;\n            align-items: center;\n          }\n          \n          .prompt-buttons button {\n            width: 100%;\n            max-width: 300px;\n          }\n          \n          .message-content {\n            max-width: 85%;\n          }\n        }\n      `}</style>\r\n\r\n      <div className=\"chat-sidebar\">\r\n        <div className=\"chat-logo\">\r\n          AI\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"chat-main\">\r\n        {messages.length === 0 ? <div className=\"chat-welcome\">\r\n                         <div className=\"hero-text\">Talk Shopify to Me</div>\r\n             <div className=\"hero-subtext\">\r\n               choose a prompt below or write your own to start chatting with OmniAI\r\n             </div>\r\n            <div className=\"prompt-buttons\">\r\n              {promptSuggestions.slice(0, 2).map((prompt, index) => <button key={index} onClick={() => handlePromptClick(prompt)} disabled={isProcessing}>\r\n                  {prompt}\r\n                </button>)}\r\n            </div>\r\n          </div> : <div className=\"chat-messages\">\r\n            {messages.map(message => <div key={message.id} className={`chat-message ${message.type}`}>\r\n                <div className=\"message-content\">\r\n                  {message.content}\r\n                </div>\r\n              </div>)}\r\n            {isProcessing && <div className=\"chat-message assistant\">\r\n                <div className=\"processing-indicator\">\r\n                                     <span>Processing...</span>\r\n                  <div className=\"processing-dots\">\r\n                    <div className=\"processing-dot\"></div>\r\n                    <div className=\"processing-dot\"></div>\r\n                    <div className=\"processing-dot\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>}\r\n          </div>}\r\n\r\n        <div className=\"chat-input-container\">\r\n          <div className=\"chat-input-wrapper\">\r\n            <input ref={inputRef} type=\"text\" value={input} onChange={e => setInput(e.target.value)} onKeyPress={handleKeyPress} placeholder=\"Ask whatever you want...\" maxLength={1000} disabled={isProcessing} />\r\n             <span className=\"char-count\">{input.length}/1000</span>\r\n             <button onClick={() => handleSubmit()} disabled={!input.trim() || isProcessing} aria-label=\"Execute\">\r\n              <svg width=\"20\" height=\"20\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" viewBox=\"0 0 24 24\">\r\n                <path d=\"M22 2L11 13\"></path>\r\n                <path d=\"M22 2L15 22L11 13L2 9L22 2Z\"></path>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>;\n}\n_s(Chatbot, \"DLhEpUlryVK9NDntbd9MSyyIb7w=\", false, function () {\n  return [useUser, useFetcher];\n});\n_c = Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app\\\\hooks\\\\useUser.ts\"\n);\nimport.meta.hot.lastModified = \"1751059615118.0276\";\n}\n// REMIX HMR END\n\nimport { useRouteLoaderData } from \"@remix-run/react\";\r\n\r\nexport const TIER_FEATURES = {\r\n  TIER1: {\r\n    name: \"Basic\",\r\n    model: \"gpt-3.5-turbo\",\r\n    maxTokens: 1000,\r\n    features: [\"Basic product updates\", \"Simple automations\", \"Standard support\"],\r\n  },\r\n  TIER2: {\r\n    name: \"Pro\",\r\n    model: \"gpt-4\",\r\n    maxTokens: 2000,\r\n    features: [\"Advanced store building\", \"Custom themes\", \"Priority support\"],\r\n  },\r\n  TIER3: {\r\n    name: \"Enterprise\",\r\n    model: \"gpt-4-turbo-preview\",\r\n    maxTokens: 4000,\r\n    features: [\"Full store automation\", \"Custom integrations\", \"24/7 support\"],\r\n  },\r\n} as const;\r\n\r\nexport interface User {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n  tier: 1 | 2 | 3;\r\n  shopId?: string;\r\n}\r\n\r\nexport function useUser() {\r\n  const data = useRouteLoaderData(\"root\") as { user: User };\r\n  const user = data?.user;\r\n\r\n  if (!user) {\r\n    throw new Error(\"User not found in route data\");\r\n  }\r\n\r\n  return {\r\n    ...user,\r\n    // Tier helpers\r\n    isTier2: () => user.tier >= 2,\r\n    isTier3: () => user.tier === 3,\r\n    getTierFeatures: () => {\r\n      switch (user.tier) {\r\n        case 3:\r\n          return TIER_FEATURES.TIER3;\r\n        case 2:\r\n          return TIER_FEATURES.TIER2;\r\n        default:\r\n          return TIER_FEATURES.TIER1;\r\n      }\r\n    },\r\n    // Feature access helpers\r\n    canUseAdvancedAutomation: () => user.tier >= 2,\r\n    canUseCustomIntegrations: () => user.tier === 3,\r\n    getGPTModel: () => {\r\n      switch (user.tier) {\r\n        case 3:\r\n          return TIER_FEATURES.TIER3.model;\r\n        case 2:\r\n          return TIER_FEATURES.TIER2.model;\r\n        default:\r\n          return TIER_FEATURES.TIER1.model;\r\n      }\r\n    },\r\n    // Upgrade helpers\r\n    needsUpgradeForFeature: (minTier: 2 | 3) => user.tier < minTier,\r\n    getUpgradeLink: () => `/settings/billing?from=tier${user.tier}`,\r\n  };\r\n} "],
  "mappings": "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",
  "names": ["import_react", "import_jsx_dev_runtime", "_s", "_s", "_c"]
}
