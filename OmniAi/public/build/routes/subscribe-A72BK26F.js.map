{
  "version": 3,
  "sources": ["../../../app/routes/subscribe.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\subscribe.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\subscribe.tsx\");\n  import.meta.hot.lastModified = \"1751566121177.4055\";\n}\n// REMIX HMR END\n\nimport { json, redirect } from \"@remix-run/node\";\nimport { useLoaderData, useNavigate, Form, useActionData } from \"@remix-run/react\";\nimport { useState } from \"react\";\nimport { AuthService } from \"~/services/auth.server\";\nimport { BillingService, BILLING_PLANS } from \"~/services/billing.server\";\nexport const meta = () => {\n  return [{\n    title: \"Subscribe to OmniAI\"\n  }, {\n    name: \"description\",\n    content: \"Choose your plan and start automating your Shopify store\"\n  }];\n};\nexport const loader = async ({\n  request\n}) => {\n  const authService = AuthService.getInstance();\n  try {\n    const auth = await authService.authenticate(request);\n    if (!auth.isAuthenticated) {\n      return redirect('/auth/login');\n    }\n    const url = new URL(request.url);\n    const selectedPlanId = url.searchParams.get('planId') || 'scale';\n    return json({\n      shop: auth.shop,\n      selectedPlanId,\n      tiers: Object.values(BILLING_PLANS)\n    });\n  } catch (error) {\n    return redirect('/auth/login');\n  }\n};\nexport const action = async ({\n  request\n}) => {\n  const authService = AuthService.getInstance();\n  const billingService = BillingService.getInstance();\n  try {\n    const auth = await authService.authenticate(request);\n    if (!auth.isAuthenticated) {\n      return json({\n        error: 'Not authenticated'\n      }, {\n        status: 401\n      });\n    }\n    const formData = await request.formData();\n    const planId = formData.get('planId');\n    if (!planId || !BILLING_PLANS[planId]) {\n      return json({\n        error: 'Invalid plan selected'\n      }, {\n        status: 400\n      });\n    }\n\n    // Create subscription and get confirmation URL\n    const confirmationUrl = await billingService.createSubscription(request, planId);\n\n    // Redirect to Shopify billing confirmation\n    return redirect(confirmationUrl);\n  } catch (error) {\n    return json({\n      error: 'Failed to create subscription'\n    }, {\n      status: 500\n    });\n  }\n};\nexport default function Subscribe() {\n  _s();\n  const {\n    shop,\n    selectedPlanId,\n    tiers\n  } = useLoaderData();\n  const actionData = useActionData();\n  const navigate = useNavigate();\n  const [currentPlanId, setCurrentPlanId] = useState(selectedPlanId);\n  return <div className=\"subscribe-page\">\r\n      <style>{`\n        .subscribe-page {\n          min-height: 100vh;\n          background: linear-gradient(135deg, #fcd8ff, #d0e5ff);\n          font-family: 'Poppins', sans-serif;\n          padding: 2rem 1rem;\n        }\n        \n        .subscribe-container {\n          max-width: 1200px;\n          margin: 0 auto;\n        }\n        \n        .subscribe-header {\n          text-align: center;\n          margin-bottom: 3rem;\n        }\n        \n        .subscribe-title {\n          font-size: 2.5rem;\n          font-weight: 600;\n          color: #222;\n          margin-bottom: 1rem;\n        }\n        \n        .subscribe-subtitle {\n          font-size: 1.1rem;\n          color: #555;\n          line-height: 1.6;\n        }\n        \n        .shop-info {\n          background: rgba(255, 255, 255, 0.9);\n          padding: 1rem 1.5rem;\n          border-radius: 12px;\n          margin-bottom: 2rem;\n          text-align: center;\n          box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n        }\n        \n        .shop-info h3 {\n          color: #333;\n          margin-bottom: 0.5rem;\n        }\n        \n        .shop-info p {\n          color: #666;\n          margin: 0;\n        }\n        \n        .pricing-grid {\n          display: grid;\n          grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));\n          gap: 2rem;\n          margin-bottom: 2rem;\n        }\n        \n        .pricing-card {\n          background: white;\n          border-radius: 16px;\n          padding: 2rem;\n          box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n          transition: all 0.3s ease;\n          cursor: pointer;\n          border: 3px solid transparent;\n          position: relative;\n          overflow: hidden;\n        }\n        \n        .pricing-card::before {\n          content: '';\n          position: absolute;\n          top: 0;\n          left: 0;\n          right: 0;\n          height: 4px;\n          background: linear-gradient(135deg, #d77cf0, #7aa2ff);\n        }\n        \n        .pricing-card:hover {\n          transform: translateY(-8px);\n          box-shadow: 0 16px 48px rgba(0, 0, 0, 0.15);\n        }\n        \n        .pricing-card.selected {\n          border-color: #d77cf0;\n          transform: translateY(-8px);\n          box-shadow: 0 16px 48px rgba(215, 124, 240, 0.2);\n        }\n        \n        .pricing-card.popular {\n          transform: scale(1.05);\n        }\n        \n        .pricing-card.popular::after {\n          content: 'Most Popular';\n          position: absolute;\n          top: 1rem;\n          right: -2rem;\n          background: linear-gradient(135deg, #d77cf0, #7aa2ff);\n          color: white;\n          padding: 0.5rem 3rem;\n          font-size: 0.8rem;\n          font-weight: 600;\n          transform: rotate(45deg);\n        }\n        \n        .pricing-header {\n          text-align: center;\n          margin-bottom: 1.5rem;\n        }\n        \n        .pricing-name {\n          font-size: 1.5rem;\n          font-weight: 600;\n          color: #333;\n          margin-bottom: 0.5rem;\n        }\n        \n        .pricing-price {\n          font-size: 2rem;\n          font-weight: 600;\n          color: #d77cf0;\n          margin-bottom: 0.5rem;\n        }\n        \n        .pricing-period {\n          color: #666;\n          font-size: 0.9rem;\n        }\n        \n        .pricing-features {\n          list-style: none;\n          padding: 0;\n          margin: 1.5rem 0;\n        }\n        \n        .pricing-features li {\n          padding: 0.5rem 0;\n          color: #555;\n          position: relative;\n          padding-left: 1.5rem;\n          font-size: 0.95rem;\n        }\n        \n        .pricing-features li::before {\n          content: '\u2713';\n          position: absolute;\n          left: 0;\n          color: #d77cf0;\n          font-weight: 600;\n        }\n        \n        .subscribe-form {\n          background: white;\n          padding: 2rem;\n          border-radius: 16px;\n          box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n          text-align: center;\n        }\n        \n        .subscribe-button {\n          background: linear-gradient(135deg, #d77cf0, #7aa2ff);\n          color: white;\n          padding: 1rem 2rem;\n          border-radius: 999px;\n          border: none;\n          font-weight: 600;\n          font-size: 1.1rem;\n          cursor: pointer;\n          transition: all 0.2s ease;\n          font-family: 'Poppins', sans-serif;\n          width: 100%;\n          max-width: 300px;\n        }\n        \n        .subscribe-button:hover {\n          background: linear-gradient(135deg, #c357e6, #6499ff);\n          transform: translateY(-2px);\n          box-shadow: 0 8px 24px rgba(215, 124, 240, 0.3);\n        }\n        \n        .subscribe-button:disabled {\n          opacity: 0.6;\n          cursor: not-allowed;\n          transform: none;\n        }\n        \n        .error-message {\n          background: #fee;\n          color: #c33;\n          padding: 1rem;\n          border-radius: 8px;\n          margin-bottom: 1rem;\n          text-align: center;\n        }\n        \n        .back-button {\n          background: transparent;\n          color: #666;\n          border: 2px solid #ddd;\n          padding: 0.75rem 1.5rem;\n          border-radius: 999px;\n          font-weight: 500;\n          cursor: pointer;\n          transition: all 0.2s ease;\n          margin-right: 1rem;\n        }\n        \n        .back-button:hover {\n          border-color: #d77cf0;\n          color: #d77cf0;\n        }\n        \n        @media (max-width: 768px) {\n          .subscribe-title {\n            font-size: 2rem;\n          }\n          \n          .pricing-grid {\n            grid-template-columns: 1fr;\n          }\n          \n          .pricing-card.popular {\n            transform: none;\n          }\n        }\n      `}</style>\r\n\r\n      <div className=\"subscribe-container\">\r\n        <div className=\"subscribe-header\">\r\n          <h1 className=\"subscribe-title\">Choose Your Plan</h1>\r\n          <p className=\"subscribe-subtitle\">\r\n            Select the perfect plan for your Shopify automation needs\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"shop-info\">\r\n          <h3>Store: {shop}</h3>\r\n          <p>Ready to supercharge your Shopify store with AI automation</p>\r\n        </div>\r\n\r\n        {actionData?.error && <div className=\"error-message\">\r\n            {actionData.error}\r\n          </div>}\r\n\r\n        <div className=\"pricing-grid\">\r\n          {tiers.map(tier => <div key={tier.id} className={`pricing-card ${tier.id === 'scale' ? 'popular' : ''} ${currentPlanId === tier.id ? 'selected' : ''}`} onClick={() => setCurrentPlanId(tier.id)}>\r\n              <div className=\"pricing-header\">\r\n                <div className=\"pricing-name\">{tier.name}</div>\r\n                <div className=\"pricing-price\">\u20AC{tier.price}</div>\r\n                <div className=\"pricing-period\">per month</div>\r\n              </div>\r\n              \r\n              <ul className=\"pricing-features\">\r\n                {tier.features.map((feature, index) => <li key={index}>{feature}</li>)}\r\n              </ul>\r\n            </div>)}\r\n        </div>\r\n\r\n        <div className=\"subscribe-form\">\r\n          <Form method=\"post\">\r\n            <input type=\"hidden\" name=\"planId\" value={currentPlanId} />\r\n            <button type=\"button\" className=\"back-button\" onClick={() => navigate('/')}>\r\n              \u2190 Back\r\n            </button>\r\n            <button type=\"submit\" className=\"subscribe-button\">\r\n              Subscribe to {BILLING_PLANS[currentPlanId]?.name} Plan\r\n            </button>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </div>;\n}\n_s(Subscribe, \"9fFUC3z5yPWBlIbuQsbwqZydFC8=\", false, function () {\n  return [useLoaderData, useActionData, useNavigate];\n});\n_c = Subscribe;\nvar _c;\n$RefreshReg$(_c, \"Subscribe\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,kBAA+B;AAE/B,IAAAA,gBAAyB;AACzB,kBAA4B;AAC5B,qBAA8C;AA6ExC;AArGN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,qCAAuC,EAAE;AAAA,EAClF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA4B;AAC5B,cAAY,IAAI,eAAe;AACjC;AAQO,IAAM,OAAO,MAAM;AACxB,SAAO,CAAC;AAAA,IACN,OAAO;AAAA,EACT,GAAG;AAAA,IACD,MAAM;AAAA,IACN,SAAS;AAAA,EACX,CAAC;AACH;AA0De,SAAR,YAA6B;AAClC,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI,cAAc;AAClB,QAAM,aAAa,cAAc;AACjC,QAAM,WAAW,YAAY;AAC7B,QAAM,CAAC,eAAe,gBAAgB,QAAI,wBAAS,cAAc;AACjE,SAAO,mDAAC,SAAI,WAAU,kBAClB;AAAA,uDAAC,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAR;AAAA;AAAA;AAAA;AAAA,WAmOE;AAAA,IAEF,mDAAC,SAAI,WAAU,uBACb;AAAA,yDAAC,SAAI,WAAU,oBACb;AAAA,2DAAC,QAAG,WAAU,mBAAkB,gCAAhC;AAAA;AAAA;AAAA;AAAA,eAAgD;AAAA,QAChD,mDAAC,OAAE,WAAU,sBAAqB,yEAAlC;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WAJF;AAAA;AAAA;AAAA;AAAA,aAKA;AAAA,MAEA,mDAAC,SAAI,WAAU,aACb;AAAA,2DAAC,QAAG;AAAA;AAAA,UAAQ;AAAA,aAAZ;AAAA;AAAA;AAAA;AAAA,eAAiB;AAAA,QACjB,mDAAC,OAAE,0EAAH;AAAA;AAAA;AAAA;AAAA,eAA6D;AAAA,WAF/D;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,MAEC,YAAY,SAAS,mDAAC,SAAI,WAAU,iBAChC,qBAAW,SADM;AAAA;AAAA;AAAA;AAAA,aAEpB;AAAA,MAEF,mDAAC,SAAI,WAAU,gBACZ,gBAAM,IAAI,UAAQ,mDAAC,SAAkB,WAAW,gBAAgB,KAAK,OAAO,UAAU,YAAY,MAAM,kBAAkB,KAAK,KAAK,aAAa,MAAM,SAAS,MAAM,iBAAiB,KAAK,EAAE,GAC3L;AAAA,2DAAC,SAAI,WAAU,kBACb;AAAA,6DAAC,SAAI,WAAU,gBAAgB,eAAK,QAApC;AAAA;AAAA;AAAA;AAAA,iBAAyC;AAAA,UACzC,mDAAC,SAAI,WAAU,iBAAgB;AAAA;AAAA,YAAE,KAAK;AAAA,eAAtC;AAAA;AAAA;AAAA;AAAA,iBAA4C;AAAA,UAC5C,mDAAC,SAAI,WAAU,kBAAiB,yBAAhC;AAAA;AAAA;AAAA;AAAA,iBAAyC;AAAA,aAH3C;AAAA;AAAA;AAAA;AAAA,eAIA;AAAA,QAEA,mDAAC,QAAG,WAAU,oBACX,eAAK,SAAS,IAAI,CAAC,SAAS,UAAU,mDAAC,QAAgB,qBAAR,OAAT;AAAA;AAAA;AAAA;AAAA,eAAyB,CAAK,KADvE;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WATyB,KAAK,IAAf;AAAA;AAAA;AAAA;AAAA,aAUjB,CAAM,KAXV;AAAA;AAAA;AAAA;AAAA,aAYA;AAAA,MAEA,mDAAC,SAAI,WAAU,kBACb,6DAAC,QAAK,QAAO,QACX;AAAA,2DAAC,WAAM,MAAK,UAAS,MAAK,UAAS,OAAO,iBAA1C;AAAA;AAAA;AAAA;AAAA,eAAyD;AAAA,QACzD,mDAAC,YAAO,MAAK,UAAS,WAAU,eAAc,SAAS,MAAM,SAAS,GAAG,GAAG,2BAA5E;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,mDAAC,YAAO,MAAK,UAAS,WAAU,oBAAmB;AAAA;AAAA,UACnC,6BAAc,aAAa,GAAG;AAAA,UAAK;AAAA,aADnD;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WAPF;AAAA;AAAA;AAAA;AAAA,aAQA,KATF;AAAA;AAAA;AAAA;AAAA,aAUA;AAAA,SAzCF;AAAA;AAAA;AAAA;AAAA,WA0CA;AAAA,OAhRG;AAAA;AAAA;AAAA;AAAA,SAiRL;AACJ;AACA,GAAG,WAAW,gCAAgC,OAAO,WAAY;AAC/D,SAAO,CAAC,eAAe,eAAe,WAAW;AACnD,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,WAAW;AAE5B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["import_react"]
}
