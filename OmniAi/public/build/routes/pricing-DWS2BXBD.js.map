{
  "version": 3,
  "sources": ["empty-module:~/services/subscription.server", "../../../app/routes/pricing.tsx"],
  "sourcesContent": ["module.exports = {};", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\pricing.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\pricing.tsx\");\n  import.meta.hot.lastModified = \"1750885040875.8389\";\n}\n// REMIX HMR END\n\nimport * as React from 'react';\nimport { json, redirect } from '@remix-run/node';\nimport { useLoaderData, useSubmit } from '@remix-run/react';\nimport { AuthService } from '~/services/auth.server';\nimport { SubscriptionService } from '~/services/subscription.server';\nexport const loader = async ({\n  request\n}) => {\n  const authService = AuthService.getInstance();\n  const auth = await authService.authenticate(request);\n  if (!auth.isAuthenticated) {\n    return redirect('/auth/login');\n  }\n  const subscriptionService = SubscriptionService.getInstance();\n  const plans = subscriptionService.getAllPlans();\n  return json({\n    shop: auth.shop,\n    currentSubscription: auth.subscription,\n    plans\n  });\n};\nexport const action = async ({\n  request\n}) => {\n  const authService = AuthService.getInstance();\n  const auth = await authService.authenticate(request);\n  if (!auth.isAuthenticated) {\n    return json({\n      error: 'Unauthorized'\n    }, {\n      status: 401\n    });\n  }\n  const formData = await request.formData();\n  const tier = parseInt(formData.get('tier'));\n  if (!tier || tier < 1 || tier > 3) {\n    return json({\n      error: 'Invalid tier'\n    }, {\n      status: 400\n    });\n  }\n  try {\n    const subscriptionService = SubscriptionService.getInstance();\n    const subscription = await subscriptionService.createSubscription(tier);\n\n    // Redirect to Shopify's billing page\n    return redirect(subscription.confirmation_url);\n  } catch (error) {\n    console.error('Error creating subscription:', error);\n    return json({\n      error: 'Failed to create subscription'\n    }, {\n      status: 500\n    });\n  }\n};\nconst plans = [{\n  tier: 1,\n  name: 'Tier 1',\n  price: 85,\n  features: ['GPT-3.5 access', 'Basic edits', 'No store builds'\n  // 'No DSers imports', // DSers removed\n  ]\n}, {\n  tier: 2,\n  name: 'Tier 2',\n  price: 170,\n  features: ['GPT-4o access', 'Full product edits', '1 store build / month'\n  // '1 DSers import / month', // DSers removed\n  ]\n}, {\n  tier: 3,\n  name: 'Tier 3',\n  price: 299,\n  features: ['GPT-4o access', 'Advanced tools', '5 store builds / month'\n  // '3 DSers imports / month', // DSers removed\n  ]\n}];\nexport default function Pricing() {\n  _s();\n  const {\n    shop,\n    currentSubscription,\n    plans\n  } = useLoaderData();\n  const [selected, setSelected] = React.useState(currentSubscription?.tier || 2);\n  const [loading, setLoading] = React.useState(false);\n  const submit = useSubmit();\n\n  // Handle plan selection\n  const handleSelect = tier => setSelected(tier);\n\n  // Handle Choose Plan: submit to backend action\n  const handleChoose = tier => {\n    setSelected(tier);\n    setLoading(true);\n    const formData = new FormData();\n    formData.append('tier', tier.toString());\n    submit(formData, {\n      method: 'post'\n    });\n  };\n  return <div style={{\n    minHeight: '100vh',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    background: 'radial-gradient(circle at top right, #3f2287 0%, #0f0c26 60%)',\n    color: '#fff',\n    padding: '40px 12px'\n  }}>\r\n      <div className=\"wrapper\" style={{\n      maxWidth: 960,\n      width: '100%',\n      textAlign: 'center'\n    }}>\r\n        {/* Logo */}\r\n        <svg width=\"0\" height=\"0\">\r\n          <defs>\r\n            <linearGradient id=\"grad\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\r\n              <stop offset=\"0%\" stopColor=\"#d946ef\" />\r\n              <stop offset=\"100%\" stopColor=\"#6366f1\" />\r\n            </linearGradient>\r\n          </defs>\r\n        </svg>\r\n        <div className=\"logo\" style={{\n        display: 'flex',\n        gap: 12,\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: 48\n      }}>\r\n          <svg viewBox=\"0 0 512 512\" style={{\n          width: 32,\n          height: 32,\n          fill: 'url(#grad)'\n        }}><path d=\"M256 0 329 182 512 256 329 330 256 512 183 330 0 256 183 182Z\" /></svg>\r\n          <span style={{\n          fontSize: '1.75rem',\n          fontWeight: 600\n        }}>OmniAI</span>\r\n        </div>\r\n        <h1 style={{\n        fontSize: 'clamp(2rem,5vw,3rem)',\n        fontWeight: 600,\n        lineHeight: 1.2,\n        marginBottom: 48\n      }}>\r\n          Select a plan that's<br />right for you\r\n        </h1>\r\n        {/* Pricing cards */}\r\n        <div className=\"plans\" style={{\n        display: 'grid',\n        gridTemplateColumns: 'repeat(auto-fit,minmax(240px,1fr))',\n        gap: 28\n      }}>\r\n          {plans.map(plan => <section key={plan.tier} className={`card${selected === plan.tier ? ' selected' : ''}`} data-tier={plan.name} style={{\n          position: 'relative',\n          padding: selected === plan.tier ? '36px 28px 96px' : '36px 28px 96px',\n          borderRadius: 18,\n          background: 'rgba(255,255,255,0.02)',\n          border: selected === plan.tier ? '1px solid transparent' : '1px solid rgba(255,255,255,0.12)',\n          borderImage: selected === plan.tier ? 'linear-gradient(135deg,#d946ef,#6366f1) 1' : undefined,\n          boxShadow: selected === plan.tier ? '0 0 12px rgba(152, 87, 255, .8), 0 0 24px rgba(152, 87, 255, .5)' : undefined,\n          overflow: 'hidden',\n          transition: 'border .25s, box-shadow .25s',\n          cursor: 'pointer'\n        }} onClick={() => handleSelect(plan.tier)}>\r\n              <h2 style={{\n            fontSize: '1.25rem',\n            fontWeight: 600,\n            marginBottom: 12\n          }}>{plan.name}</h2>\r\n              <p className=\"price\" style={{\n            fontSize: '2.5rem',\n            fontWeight: 700,\n            marginBottom: 4\n          }}>\u20AC{plan.price}</p>\r\n              <p className=\"cycle\" style={{\n            fontSize: '.9rem',\n            color: '#c2c2d5',\n            marginBottom: 24\n          }}>/month</p>\r\n              <ul style={{\n            listStyle: 'none',\n            textAlign: 'left',\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 10,\n            fontSize: '.95rem',\n            marginBottom: 40,\n            color: '#c2c2d5'\n          }}>\r\n                {plan.features.map((f, i) => <li key={i} style={{\n              position: 'relative'\n            }}>\r\n                    <span style={{\n                color: '#d946ef',\n                marginRight: 8\n              }}>\u2022</span>{f}\r\n                  </li>)}\r\n              </ul>\r\n              <button className=\"btn\" style={{\n            position: 'absolute',\n            left: '50%',\n            bottom: 32,\n            transform: 'translateX(-50%)',\n            width: '70%',\n            padding: '12px 0',\n            borderRadius: 10,\n            background: selected === plan.tier ? 'linear-gradient(135deg,#d946ef,#6366f1)' : 'rgba(255,255,255,0.05)',\n            border: '1px solid rgba(255,255,255,0.12)',\n            color: '#fff',\n            fontSize: '1rem',\n            fontWeight: 500,\n            cursor: 'pointer',\n            transition: 'background .2s, box-shadow .2s',\n            boxShadow: selected === plan.tier ? '0 1px 6px rgba(0,0,0,.25)' : undefined,\n            opacity: loading && selected === plan.tier ? 0.7 : 1\n          }} onClick={e => {\n            e.stopPropagation();\n            handleChoose(plan.tier);\n          }} disabled={loading || currentSubscription?.tier === plan.tier}>\r\n                {currentSubscription?.tier === plan.tier ? 'Current Plan' : loading && selected === plan.tier ? 'Redirecting...' : 'Choose Plan'}\r\n              </button>\r\n            </section>)}\r\n        </div>\r\n      </div>\r\n    </div>;\n}\n_s(Pricing, \"MB++SfO7YySeahQLjjBccl8093A=\", false, function () {\n  return [useLoaderData, useSubmit];\n});\n_c = Pricing;\nvar _c;\n$RefreshReg$(_c, \"Pricing\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
