{
  "version": 3,
  "sources": ["empty-module:~/config/env.server", "../../../app/routes/auth.callback.tsx"],
  "sourcesContent": ["module.exports = {};", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\auth.callback.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\auth.callback.tsx\");\n  import.meta.hot.lastModified = \"1751566632664.552\";\n}\n// REMIX HMR END\n\nimport { redirect, createCookieSessionStorage } from '@remix-run/node';\nimport { AuthService } from '~/services/auth.server';\nimport { Logger } from '~/utils/logger.server';\nimport { env } from '~/config/env.server';\nconst logger = new Logger('auth-callback');\n\n// Create session storage for this route\nconst sessionStorage = createCookieSessionStorage({\n  cookie: {\n    name: 'shopify_session',\n    httpOnly: true,\n    path: '/',\n    sameSite: 'lax',\n    secrets: [env.SESSION_SECRET],\n    secure: env.NODE_ENV === 'production',\n    maxAge: 24 * 60 * 60 // 24 hours\n  }\n});\nexport const loader = async ({\n  request\n}) => {\n  const authService = AuthService.getInstance();\n  try {\n    const result = await authService.handleAuthCallback(request);\n    logger.info('OAuth callback successful', {\n      shop: result.shop\n    });\n\n    // Redirect to landing page with the session cookie\n    // The landing page will handle subscription checking and routing\n    return redirect('/', {\n      headers: {\n        'Set-Cookie': await sessionStorage.commitSession(result.session)\n      }\n    });\n  } catch (error) {\n    logger.error('OAuth callback failed', error);\n    return redirect('/?error=auth_callback_failed');\n  }\n};\n\n// This route only handles the callback, no component needed\nexport default function AuthCallback() {\n  return null;\n}\n_c = AuthCallback;\n;\nvar _c;\n$RefreshReg$(_c, \"AuthCallback\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,WAAO,UAAU,CAAC;AAAA;AAAA;;;ACoBlB,kBAAqD;AACrD,kBAA4B;AAC5B,oBAAuB;AACvB,iBAAoB;AAtBpB,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,yCAA2C,EAAE;AAAA,EACtF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAgC;AAChC,cAAY,IAAI,eAAe;AACjC;AAOA,IAAM,SAAS,IAAI,qBAAO,eAAe;AAGzC,IAAM,qBAAiB,wCAA2B;AAAA,EAChD,QAAQ;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,UAAU;AAAA,IACV,SAAS,CAAC,eAAI,cAAc;AAAA,IAC5B,QAAQ,eAAI,aAAa;AAAA,IACzB,QAAQ,KAAK,KAAK;AAAA;AAAA,EACpB;AACF,CAAC;AAyBc,SAAR,eAAgC;AACrC,SAAO;AACT;AACA,KAAK;AAEL,IAAI;AACJ,aAAa,IAAI,cAAc;AAE/B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
